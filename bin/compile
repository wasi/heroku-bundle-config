#!/bin/bash

#pwd contains this buildpack
build_dir="$1" #Contains the rails application, as it was checked out from GIT
#E.g. /tmp/build_d237f460-a947-4e42-a7e1-61a3abcc27b6
cache_dir="$2" #Contains the cahde dir. All the cached files are there and this
#or any later buildpacks may use it to fetch data.
#/app/tmp/cache

#What does the /app folder containt, the old app?

#pwd
#echo $1
#echo $2
#echo $3
#echo "ls"
#ls -all
#echo "ls $1"
#ls -all $1
#echo "ls $2"
#ls -all $2
#echo "ls $3"
#ls -all $3

echo "Old .bundle/config contents"
cat "$build_dir/.bundle/config"
echo "Cache .bundle/config contents"
cat "$cache_dir/.bundle/config"

echo "Purging .bundle folder if present"
[ -d "$build_dir/.bundle" ] && rm -rf "$build_dir/.bundle"
echo "Renaming heroku-bundle"
mv "$build_dir/.heroku-bundle" "$build_dir/.bundle"
echo "Done."

echo 'ls -all "$build_dir"'
ls -all "$build_dir"
echo 'ls "$build_dir/.heroku-bundle"'
ls "$build_dir/.heroku-bundle"
echo 'ls "$build_dir/.bundle"'
ls "$build_dir/.bundle"
echo "Convert all aboslute path references in the bundle to refer the temporary build location instead."
find "$build_dir/.bundle/" -type f -exec sed -i "s /app/ $build_dir/ g" {} \;
#sed "s /app/ /$build_dir/ g" "$build_dir/.bundle/*"

echo "Purging .bundle folder if present from cache as well"
[ -d "$cache_dir/.bundle" ] && rm -rf "$cache_dir/.bundle"
echo "Caching the changes.."
mkdir -p "$cache_dir"
cp -r "$build_dir/.bundle" "$cache_dir/.bundle"

echo "Debugging apt"
ls "$build_dir/.apt/usr/"

echo "- bin:"
ls "$build_dir/.apt/usr/bin/"
echo "- lib:"
ls "$build_dir/.apt/usr/lib/"
echo "- share:"
ls "$build_dir/.apt/usr/share/"
echo "- include:"
ls "$build_dir/.apt/usr/include/"


#sed: can't read /tmp/build_c982f0d9-9b66-42e6-a875-0a681a1e47fb/.bundle/*: No such file or directory
